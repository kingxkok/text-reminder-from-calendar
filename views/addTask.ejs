<html>

<head>
    <title>
        <%= title %>
    </title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="/stylesheets/upload.css">
</head>

<body>
    <div class="container">
        <% include ./partials/nav %>
        <div id='drop-area' class="card" style="width: 100%">
            <div class="form-group">
                <div class="upload-button">Upload Calendar</div>
                <input class="file-upload" type="file" accept="text/calendar" />
            </div>
            <button id='confirm' style='width: 10em'>Confirm</button>
            <pre id="calendar-preview"> </pre>
        </div>
    </div> <!-- container -->
</body>
<script src="/js/jquery.min.js"></script>
<script src="/js/bootstrap.min.js"></script>
<script src="/js/icsManipulation.js">//for ICAL</script>

<script>



    const phonNumberValidatorRegex = /^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}$/;
    const selectDataToSend = (extractedCalendarData) => {
        let selectData = { events: [] }
        extractedCalendarData.events.forEach((event) => {
            let title, phoneNumber, epochTime;
            const time = event.startTime.time;
            const year = time.slice(0, 4);
            const month = time.slice(4, 6);
            const day = time.slice(6, 8);
            const hours = time.slice(9, 11);
            const mins = time.slice(11, 13);
            const secs = time.slice(13, 15);
            const timezone = extractedCalendarData.timezones[event.startTime.TZID];

            let selectedTimezoneTypes = [];
            if (timezone) {
                selectedTimezoneTypes = ICAL.selectTimezoneData(year, timezone);
            }

            let timezoneOffset = '';
            let date = [year, month, day].join('-') + 'T' + [hours, mins, secs].join(':');
            if (selectedTimezoneTypes.length > 0) {
                let i;
                for (i = 0; i < selectedTimezoneTypes.length; i++) {
                    if (new Date(date + selectedTimezoneTypes[i].tzOffsetFrom) < selectedTimezoneTypes[i].cutoffDate) {
                        timezoneOffset = selectedTimezoneTypes[i].tzOffsetFrom;
                        break;
                    };
                }
                if (i === selectedTimezoneTypes.length)
                    timezoneOffset = selectedTimezoneTypes[i - 1].tzOffsetTo;
            }
            else if (timezone) {
                timezoneOffset = Object.values(timezone)[0].TZOFFSETTO;
                timezoneOffset = timezoneOffset.slice(0, 3) + ":" + timezoneOffset.slice(3);
            }
            date = [year, month, day].join('-') + 'T' + [hours, mins, secs].join(':') + timezoneOffset;

            epochTime = new Date(date).getTime();
            console.log(date, new Date(date).toString())
            title = event.summary;
            const phoneNumberValid = phonNumberValidatorRegex.test(event.location);
            if (phoneNumberValid) {
                phoneNumber = event.location.replace(/[^0-9]/g, "");
                if (event.location[0] !== '+' && phoneNumber.length === 10) {
                    phoneNumber = '+1' + phoneNumber;
                } else {
                    phoneNumber = '+' + phoneNumber;
                }
            }
            else {
                console.error('phone number invalid', event.location)
                return;
            }

            console.log(phoneNumber, 'lol');


            selectData.events.push({ title, phoneNumber, epochTime })
        })
        console.log(selectData)
        return selectData;
    }


    let selectedCalendarData;
    $(document).ready(function () {
        var readURL = function (input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    const icsString = e.target.result;
                    let extractedCalendarData = ICAL.extractCalendarData(icsString);
                    console.log(window.cal = extractedCalendarData);
                    $('#calendar-preview').html(JSON.stringify(extractedCalendarData, null, '\t'));
                    selectedCalendarData = selectDataToSend(extractedCalendarData);

                }

                reader.readAsText(input.files[0]);
            }
        }
        $(".file-upload").on('change', function () {
            readURL(this);
        });

        $(".upload-button").on('click', function () {
            $(".file-upload").click();
        });

        $("#confirm").on('click', () => {
            $.ajax({
                type: "POST",
                url: '/task/add/',
                data: JSON.stringify(selectedCalendarData),
                success: () => { alert('success!') },
                contentType: 'application/json'
            });
        })

    });
</script>

</html>